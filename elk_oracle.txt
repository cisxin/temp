//elk

GET _search
{
  "query": {
    "match_all": {}
  }
}

post 索引名称/_delete_by_query
{
  "query": {
    "match_all": {}
  }
}

GET message/_search
{
  "size": 1000,
  "sort": [
    {
      "timestamp": {
        "order": "desc"
      }
    }
  ],
  "query": {
    "bool": {
      "must": [],
      "filter": [
        {
          "match_all": {}
        }
      ],
      "should": [],
      "must_not": []
    }
  }
}

POST /message/_delete_by_query
{
  "query": {
    "bool": { 
      "must": [
        {
          "range": {
            "@timestamp": {
              "lte": "2022-12-31T00:00:00.000Z"
            }
          }
        }, 
        {
          "match_phrase": {
            "text.content": "本周的热点"
          }
        }
      ]
    }
  }
}    

curl -u 'elastic:123456' -X GET "10.10.0.1:9201/_cat/indices?v"
  
curl -k -XPOST http://192.168.0.1:9200/message/_search -H 'Content-Type: application/json' -d'
{
  "query": {
    "match": {
      "content": "想你"
    }
  },
  "sort": {
      "create_time": {
          "order": "desc"
      },
      "_score": {
          "order": "asc"
      }     
  },  
  "from":0,
  "size":500
}'  

curl -k -XPOST http://192.168.0.1:9200/message/_search -H 'Content-Type: application/json' -d'
{
  "query": {
    "bool": {
      "must": [
        {
          "range": {
              "@timestamp": {
                  "gte": "2021-12-07T07:04:51.000000Z"
              }
          }
        },
        {
          "match_phrase": {
              "msgtype": "text"
          }
        },
        {
            "bool": {
                "should": [
                    {
                        "bool": {
                            "must_not": {
                                "exists": {
                                    "field": "upload_time"
                                }
                            }
                        }
                    },
                    {
                        "range":{
                            "upload_time": {
                                "lt": 1000
                            }
                        }
                    }
                ]
            }
        }        
      ]
    }
  },
  "sort": [
    {
      "@timestamp": {
          "order": "asc"
      }
    }
  ]  
}'

//add _template
PUT _template/check_template
{
  "index_patterns": ["test_2_202*"],
  "mappings": {
    "properties": {
      "tolist": {
        "type": "text",
        "analyzer": "ik_smart",
        "search_analyzer": "ik_smart",
        "fielddata": true
      }
    }
  }
}

//复制记录到生成新索引
POST _reindex
{
  "source": {
    "index": "message_2024",
    "size": 1000, 
    "sort": [ 
      { "create_time": "desc" }
    ]
  },
  "dest": {
    "index": "new_index_2021"
  }
}
POST new_index_2021/_delete_by_query
{
  "query": {
    "match_all": {}
  }
}

curl -k -XPOST http://192.168.0.1:9200/message/_search -H 'Content-Type: application/json' -d'
{
"docvalue_fields":[{"field":"@timestamp","format":"date_time"}],
"query":{"bool":{"filter":[{"match_all":{}},{"match_phrase":{"@timestamp":{"query":"now-4d/d"}}},{"script":{"script": {"source":"doc[\"roomid.keyword\"].size()==1 && doc[\"roomid.keyword\"].value.length()>1"}}}]}},
"size":0,"_source":{"excludes":[]},"stored_fields":["*"],
"aggs":{"roomid":{"terms":{"field":"roomid.keyword","order":{"_count":"desc"},"size":1000000},"aggs":{
"meeting_voice_call":{"stats":{"script":"doc[\"meeting_voice_call.endtime\"].size()==0||doc[\"meeting_voice_call.endtime\"].value==0?0:doc[\"meeting_voice_call.endtime\"].value-doc.msgtime.value/1000"}},
"images_count":{"stats":{"script":"doc[\"msgtype\"].value==\"image\"?1:0"}},
"text_count":{"stats":{"script":"doc[\"msgtype\"].value==\"text\"?1:0"}},
"revoke_count":{"stats":{"script":"doc[\"msgtype\"].value==\"revoke\"?1:0"}},
"voice_count":{"stats":{"script":"doc[\"msgtype\"].value==\"voice\"?1:0"}},
"video_count":{"stats":{"script":"doc[\"msgtype\"].value==\"video\"?1:0"}},
"file_count":{"stats":{"script":"doc[\"msgtype\"].value==\"file\"?1:0"}},
"redpacket_count":{"stats":{"script":"doc[\"msgtype\"].value==\"redpacket\"?1:0"}},
"meeting_voice_call_count":{"stats":{"script":"doc[\"msgtype\"].value==\"meeting_voice_call\"?1:0"}},
"start_time":{"min":{"field":"@timestamp","format":"yyyy-MM-dd HH:mm:ss"}},
"end_time":{"max":{"field":"@timestamp","format":"yyyy-MM-dd HH:mm:ss"}},
"time":{"max":{"field":"@timestamp","format":"yyyy-MM-dd"}},
"tolist_count":{"cardinality":{"field":"tolist"}},
"msgtype_count":{"cardinality":{"field":"msgtype"}}}}}}'

./elasticdump --overwrite --limit=2000 --retryAttempts=100 --timeout=10000 --input=https://'elastic':'123456'@www.test.com:9200/message --output=http://10.10.0.10:9200/message

curl -k -u 'elastic':'123456' -XPUT "https://www.test.com:9200/_reindex?pretty" -H 'Content-Type: application/json; charset=UTF-8' -d'
{
  "source": {
    "remote": {
      "host": "https://www.test.com:9200",
      "socket_timeout": "1m",
      "connect_timeout": "10s",
      "username": "elastic",
      "password": "123456"
    },
    "size":100,
    "index": "work_2022",
    "query": {
      "match_all": {}
    }
  },
  "dest": {
    "index": "work_2022"
  }
}'

logstash.yml
http.host: "0.0.0.0"
log.level: "error"

//reply.sh
#!/bin/bash
_db=$1
_db2=$2
scmd=`ps -ef | grep 'reply.sh' | grep -v "$$" | grep -v grep`
if [ -n "$scmd" ];then
    echo "exit:" "$scmd"
    exit
fi
json=`curl -s  -XGET http://10.10.0.153:9200/$_db/_search -H 'Content-Type: application/json' -d'
{"query":{"bool":{"must":[{"bool":{"should":[{"bool":{"must_not":{"exists":{"field":"msgtime_reply"}}}},{"range":{"msgtime_reply":{"lt": 1000}}}]}}],
"filter":[{"match_all":{}},{"match_phrase":{"@timestamp":{"query":"now/d"}}},{"script":{"script":{"source":"doc[\"tolist\"].size()==1"}}}]}},
"sort":[{"msgtime":{"order":"desc"}}],"size":2000,"_source":["_id","msgid","msgtype","msgtime","msgtime_reply","from","tolist","roomid"]}'`;
list=`echo $json | jq -c '.hits.hits'`;
length=`echo $json | jq '.hits.hits|length'`;

echo $list $length
for i in `seq 0 $length`
do
    s=`echo $list | jq -c ".[$i]"`;
    if [ $s = "null" ];then
        continue
    fi
    _id=`echo $s | jq "._id"`;
    from=`echo $s | jq "._source.from"`;
    tolist=`echo $s | jq "._source.tolist[0]"`;
    roomid=`echo $s | jq "._source.roomid"`;
    msgtime=`echo $s | jq "._source.msgtime"`;
    msgtime_reply=`echo $s | jq "._source.msgtime_reply"`;
    #echo $i $_id $from $tolist $roomid $msgtime
    if [ "$roomid" !=  "\"\""  -o "$from" = "null" ];then
        echo `date` $i/$length "reply1000:" $i $_id $from $tolist $roomid $msgtime
        continue
    fi

    ts=`echo $[$(date +%s%N)/1000000]`;
    m=$((($ts - $msgtime)/1000/60));
    if [ $m -gt 60 -a $(($i % 2)) -eq 0 ];then  
        echo `date` $i/$length "reply1500:" $i $j $_id $from $tolist
        continue
    fi

    json2=`curl -s  -XGET http://10.10.0.153:9200/$_db/_search -H 'Content-Type: application/json' -d'
{"docvalue_fields":[{"field":"@timestamp","format":"date_time"}],
"query":{"bool":{"must":[{"term":{"from":'$tolist'}},{"term":{"tolist":'$from'}}],
"filter":[{"range":{"msgtime":{"gt":'$msgtime'}}},{"match_phrase":{"@timestamp":{"query":"now/d"}}}]}},
"sort":[{"msgtime":{"order":"asc"}}],
"size":1,"_source":["_id","msgid","msgtype","msgtime"]}'`;
    list2=`echo $json2 | jq -c '.hits.hits'`;
    length2=`echo $json2 | jq '.hits.hits|length'`;
    #echo $list2 $length2
    
    if [ $length2 -eq 0 ];then
        echo `date` $i/$length "reply2000:" $i $j $_id $from $tolist

        if [ "$msgtime_reply" = "null" ];then
            json22=`curl -s  -XGET http://10.10.0.153:9200/$_db/_search -H 'Content-Type: application/json' -d'
{"docvalue_fields":[{"field":"@timestamp","format":"date_time"}],
"query":{"bool":{"must":[{"term":{"from":'$tolist'}},{"term":{"tolist":'$from'}}],
"filter":[{"range":{"msgtime":{"lte":'$msgtime'}}},{"match_phrase":{"@timestamp":{"query":"now/d"}}}]}},
"size":1,"_source":["_id","msgid","msgtype","msgtime"]}'`;
            length22=`echo $json22 | jq '.hits.hits|length'`;
            msgtime22=0;
            if [ $length22 -eq 0 ];then
                msgtime22=-1
            fi
            json23=`curl -s  -H 'Content-Type: application/x-ndjson' -XPOST http://10.10.0.153:9200/$_db/_update_by_query -d'
{"script":{"inline":"ctx._source.msgtime_reply='$msgtime22'L"},
"query":{"match_phrase":{"_id":'$_id'}}}'`;
            if [ $(($i % 1000)) -eq 0 ];then  
                echo `date` $i/$length "reply 22:" $json23 $i $_id > /dev/console
            fi
        fi

        continue
    fi
    for j in `seq 0 $length2`
    do
        s2=`echo $list2 | jq -c ".[$j]"`;
        if [ $s2 = "null" ];then
            continue
        fi
        _id2=`echo $s2 | jq "._id"`;
        msgid2=`echo $s2 | jq "._source.msgid"`;
        msgtime2=`echo $s2 | jq "._source.msgtime"`;
        if [ "$msgid2" =  "\"\"" ];then
            continue
        fi
        json3=`curl -s  -H 'Content-Type: application/x-ndjson' -XPOST http://10.10.0.153:9200/$_db/_update_by_query -d'
{"script":{"inline":"ctx._source.msgtime_reply='$msgtime2'L"},
"query":{"match_phrase":{"_id":'$_id'}}}'`;
        if [ $(($i % 1000)) -eq 0 ];then  
            echo `date` $i/$length "reply:" $json3 $i $j $_id $_id2 $msgid2 $msgtime2 > /dev/console
        fi
        json4=`curl -s  -H 'Content-Type: application/x-ndjson' -XPOST http://10.10.0.153:9200/$_db2/_update_by_query -d'
{"script":{"inline":"ctx._source.updatetime='$msgtime2'L"},
"query":{"match_phrase":{"_id":'$_id'}}}'`;
        if [ $(($i % 1000)) -eq 0 ];then  
            echo `date` $i/$length "updatetime:" $json4 $i $j $_id $_id2 $msgid2 $msgtime2 > /dev/console
        fi
    done
done


//reply_asc.sh
#!/bin/bash
_db=$1
_db2=$2
scmd=`ps -ef | grep 'reply_asc.sh' | grep -v "$$" | grep -v 'grep' | grep -v 2000`
if [ $_db2 -gt 0 ];then
    scmd=`ps -ef | grep 'reply_asc.sh' | grep -v "$$" | grep -v 'grep' | grep $_db2`
fi
if [ -n "$scmd" ];then
    echo "exit:" "$scmd"
    exit
fi
json=`curl -s -u 'elastic':'123456' -XGET http://10.10.0.1:9200/$_db/_search -H 'Content-Type: application/json' -d'
{"query":{"bool":{"must":[{"bool":{"should":[{"bool":{"must_not":{"exists":{"field":"msgtime_reply"}}}},{"range":{"msgtime_reply":{"lt": 1000}}}]}},{"wildcard":{"from.keyword": "wm*"}}],
"filter":[{"match_all":{}},{"match_phrase":{"@timestamp":{"query":"now/d"}}},{"script":{"script":{"source":"doc[\"tolist.keyword\"].size()==1"}}}]}},
"sort":[{"msgtime":{"order":"asc"}}],"from": '$_db2',"size":2000,"_source":["_id","msgid","msgtype","msgtime","msgtime_reply","from","tolist","roomid"]}'`;
list=`echo $json | jq -c '.hits.hits'`;
length=`echo $json | jq '.hits.hits|length'`;

echo $list $length
for i in `seq 0 $length`
do
    s=`echo $list | jq -c ".[$i]"`;
    if [ $s = "null" ];then
        continue
    fi
    _id=`echo $s | jq "._id"`;
    from=`echo $s | jq "._source.from"`;
    tolist=`echo $s | jq "._source.tolist[0]"`;
    roomid=`echo $s | jq "._source.roomid"`;
    msgtime=`echo $s | jq "._source.msgtime"`;
    msgtime_reply=`echo $s | jq "._source.msgtime_reply"`;

    #echo $i $_id $from $tolist $roomid $msgtime
    if [ "$roomid" !=  "\"\""  -o "$from" = "null" ];then
        echo `date` $i/$length "reply1000:" $i $_id $from $tolist $roomid $msgtime
        continue
    fi

    ts=`echo $[$(date +%s%N)/1000000]`;
    m=$((($ts - $msgtime)/1000/60));
    if [ $m -gt 600 -a $(($i % 2)) -eq 0 ];then  
        echo `date` $i/$length "reply1500: " $i $_id $from $tolist $m'm' $msgtime
        continue
    fi

    json2=`curl -s -u 'elastic':'123456' -XGET http://10.10.0.1:9200/$_db/_search -H 'Content-Type: application/json' -d'
{"docvalue_fields":[{"field":"@timestamp","format":"date_time"}],
"query":{"bool":{"must":[{"term":{"from.keyword":'$tolist'}},{"term":{"tolist.keyword":'$from'}}],
"filter":[{"range":{"msgtime":{"gt":'$msgtime'}}},{"match_phrase":{"@timestamp":{"query":"now/d"}}}]}},
"sort":[{"msgtime":{"order":"asc"}}],
"size":1,"_source":["_id","msgid","msgtype","msgtime"]}'`;

    list2=`echo $json2 | jq -c '.hits.hits'`;
    length2=`echo $json2 | jq '.hits.hits|length'`;
    #echo $json2222 $json2 $list2 $length2
    
    if [ $length2 -eq 0 ];then
        echo `date` $i/$length "reply2000:" $i $_id $from $tolist $msgtime_reply `date -d @"$(($msgtime/1000))" +"%Y-%m-%d %H:%M:%S"`

        if [ "$msgtime_reply" = "null" ];then
            json22=`curl -s -u 'elastic':'123456' -XGET http://10.10.0.1:9200/$_db/_search -H 'Content-Type: application/json' -d'
{"docvalue_fields":[{"field":"@timestamp","format":"date_time"}],
"query":{"bool":{"must":[{"term":{"from.keyword":'$tolist'}},{"term":{"tolist.keyword":'$from'}}],
"filter":[{"range":{"msgtime":{"lte":'$msgtime'}}},{"match_phrase":{"@timestamp":{"query":"now/d"}}}]}},
"size":1,"_source":["_id","msgid","msgtype","msgtime"]}'`;
            length22=`echo $json22 | jq '.hits.hits|length'`;
            msgtime22=0;
            if [ $length22 -eq 0 ];then
                msgtime22=-1
            fi
            json23=`curl -s -u 'elastic':'123456' -H 'Content-Type: application/x-ndjson' -XPOST http://10.10.0.1:9200/$_db/_update_by_query -d'
{"script":{"inline":"ctx._source.msgtime_reply=params.aaaa","params":{"aaaa":'$msgtime2'}},"query":{"match_phrase":{"_id":'$_id'}}}'`;
            if [ $(($i % 1)) -eq 0 ];then  
                echo `date` $i/$length "reply 22:" $json23 $i $_id > /dev/console
            fi
        fi

        continue
    fi
    if [ $(($i % 100)) -eq 0 ];then
        echo `date` $i/$length "updatetime3000:" $json2 $list2 $length2
    fi
    for j in `seq 0 $length2`
    do
        s2=`echo $list2 | jq -c ".[$j]"`;
        if [ $s2 = "null" ];then
            continue
        fi
        _id2=`echo $s2 | jq "._id"`;
        msgid2=`echo $s2 | jq "._source.msgid"`;
        msgtime2=`echo $s2 | jq "._source.msgtime"`;
        if [ "$msgid2" =  "\"\"" ];then
            continue
        fi
        json3=`curl -s -u 'elastic':'123456' -H 'Content-Type: application/x-ndjson' -XPOST http://10.10.0.1:9200/$_db/_update_by_query -d'
{"script":{"inline":"ctx._source.msgtime_reply='$msgtime2'L"},
"query":{"match_phrase":{"_id":'$_id'}}}'`;
        if [ $(($i % 1000)) -eq 0 ];then  
            echo `date` $i/$length "reply:" $json3 $i $j $_id $_id2 $msgid2 $msgtime2 > /dev/console
        fi
        #json4=`curl -s -u 'elastic':'123456' -H 'Content-Type: application/x-ndjson' -XPOST http://10.10.0.1:9200/$_db2/_update_by_query -d'
#{"script":{"inline":"ctx._source.updatetime='$msgtime2'L"},
#"query":{"match_phrase":{"_id":'$_id'}}}'`;
#        if [ $(($i % 1)) -eq 0 ];then  
#            echo `date` $i/$length "updatetime4000:" $json4 $i $j $_id $_id2 $msgid2 $msgtime2 > /dev/console
#        fi
    done
done


//runlwework.sh
docker stop logstash0 || echo 'DONE'
docker rm logstash0 || echo 'DONE'
docker run -d --name logstash0 --restart=always -v `pwd`/pipeline/:/usr/share/logstash/pipeline/ -v `pwd`/logstash.yml:/usr/share/logstash/config/logstash.yml -v `pwd`/ldata:/app/data -v `pwd`/logstash:/var/log/logstash -v /etc/localtime:/etc/localtime:ro -p 9600:9600/tcp -p 5044:5044/tcp -p 5054-5099:5054-5099 -p 5114-5199:5114-5199 -e LS_JAVA_OPTS='-Xms2048m -Xmx2048m' -e ES_JAVA_OPTS='-Xms2048m -Xmx2048m' logstash:latest


//weworkbak.bat
@echo off & setlocal enabledelayedexpansion
title wework
set /p d1=startdate:
echo %d1%
set /a d1=%d1%
set date_format="YYYYMMDD"
echo !d1! | findstr /r /c:"^[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]"
if %errorlevel% == 1 (
  echo 日期1格式不正确，应为 %date_format%
  exit /b 1
)
set /p d2=enddate:
echo %d2%
set /a d2=%d2%
set date_format="YYYYMMDD"
echo !d2! | findstr /r /c:"^[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]"
if %errorlevel% == 1 (
  echo 日期2格式不正确，应为 %date_format%
  exit /b 1
)
plink.exe -ssh -no-antispoof -P 22244 -i E:\txy_id_rsa_1024_putty.ppk ubuntu@1.114.0.1 /app/wework/runmsgbak.sh !d1! !d2!
echo download...
::pscp.exe -sftp -P 22244 -i E:\txy_id_rsa_1024_putty.ppk -r ubuntu@1.114.0.1:/tmp/!d2! ./
set infile=psftp0.txt
set outfile=psftp.txt
set findstr=starttime
set findstr2=endtime
set replacestr=!d1!
set replacestr2=!d2!
for /f "delims=" %%a in (%infile%) do (
    set "line=%%a"
    call set "line=%%line:%findstr%=%replacestr%%%"
    call set "line=%%line:%findstr2%=%replacestr2%%%"
    echo !line!
    echo !line! > %outfile%
)
psftp.exe -P 22244 -i E:\txy_id_rsa_1024_putty.ppk ubuntu@1.114.0.1 -b "psftp.txt" -bc
echo end
exit


---------------------------------------------------------------------------



//oracle

##11g
docker pull registry.cn-hangzhou.aliyuncs.com/helowin/oracle_11g

docker run  -itd -p 1521:1521 --name oracle0 --restart=always --mount source=oracle_vol,target=/home/oracle/app/oracle/oradata registry.aliyuncs.com/helowin/oracle_11g

docker stop oracle0 && docker rm oracle0
docker volume rm oracle_vol
docker run  -itd -p 1521:1521 --name oracle0 -v /tmp:/tmp -v `pwd`/data:/home/oracle/app/oracle/oradata -e ORACLE_HOME=/home/oracle/app/oracle/product/11.2.0/dbhome_2 -e ORACLE_SID=helowin -e PATH=$ORACLE_HOME/bin:$PATH registry.aliyuncs.com/helowin/oracle_11g
docker run  -itd -p 1521:1521 --name oracle0 -v /tmp:/tmp --mount source=oracle_vol,target=/home/oracle/app/oracle/oradata -e ORACLE_HOME=/home/oracle/app/oracle/product/11.2.0/dbhome_2 -e ORACLE_SID=helowin -e PATH=$ORACLE_HOME/bin:$PATH registry.aliyuncs.com/helowin/oracle_11g
docker logs -f --tail 1000 oracle0
docker volume inspect oracle_vol
docker volume rm oracle_vol
docker exec -it oracle0 bash
root helowin
su root
vi /etc/profile
export ORACLE_HOME=/home/oracle/app/oracle/product/11.2.0/dbhome_2
export ORACLE_SID=helowin
export PATH=$ORACLE_HOME/bin:$PATH
su - oracle
sqlplus /nolog
conn /as sysdba;
alter user system identified by oracle;
alter user sys identified by oracle;
alter profile default limit PASSWORD_LIFE_TIME UNLIMITED;
create user root identified by 123456;
grant connect,resource,dba to root;
show user;      # 查看当前用户
USER is "SYS"
10.0.0.108:1521/helowin


username:root
password:123456
database:10.0.0.108:1521/helowin
connect as:Normal

-------------------------------
##os dir
root />mkdir -p /u01/oradata
root />mkdir -p /u02/oradata
root />mkdir -p /u03/oradata
chmod 777 -R /u03
##tablespace
sql>@/tmp/20230117/01.sql
sql>@/tmp/20230117/02.sql
sql>@/tmp/20230117/09.sql
ls /u01/oradata
##create oracle directory
create directory ds_data as '&PATH';
/tmp/20230117
select * from dba_directories;
grant read,write on directory ds_data to system;
[oracle@3a5dfc318b34 20230117]$
impdp system/oracle@helowin directory=ds_data schemas=HISTORYSETTLEMENT,WF,PLM_DATA_PROVIDER,DMS,LDM,SOURCETMP,SYSOPERATOR,SETTLEMENT,RISK,ONLYQUERY dumpfile=CRMSDB1.dmp,CRMSDB2.dmp,CRMSDB3.dmp,CRMSDB4.dmp,CRMSDB5.dmp,CRMSDB6.dmp logfile=expdp_20230117.log parallel=6 job_name=impd_job1 TRANSFORM=segment_attributes:n
impdp system/oracle@helowin directory=ds_data schemas=HISTORYSETTLEMENT,WF,PLM_DATA_PROVIDER,DMS,SOURCETMP,SYSOPERATOR,SETTLEMENT,RISK,ONLYQUERY dumpfile=CRMSDB1.dmp,CRMSDB2.dmp,CRMSDB3.dmp,CRMSDB4.dmp,CRMSDB5.dmp,CRMSDB6.dmp logfile=expdp_20230117.log parallel=6 job_name=impd_job1 TRANSFORM=segment_attributes:n

select username from dba_users;

----------------------------------
--限制session
alter system enable restricted session;
--查询相关参数并修改（防止有任务自动启动执行，一般不做也没关系）
show parameter job_queue_processes; -- 记下这个值
show parameter aq_tm_processes; -- 记下这个值
alter system set job_queue_processes=0;
alter system set aq_tm_processes=0;
Alter database open;

-- 按需修改nls_characterset，其中INTERNAL_USE表示跳过字符集检查
alter database character set internal_use AL32UTF8;
-- 按需修改nls_nchar_characterset
ALTER DATABASE NATIONAL CHARACTER SET INTERNAL_USE UTF8;
-- 查看修改后字符集
select * from nls_database_parameters;

SQL>shutdown immediate;
SQL>startup mount;

-----------------------------------------------------------------------------
# 下载镜像 oracle.19c
docker pull registry.cn-hangzhou.aliyuncs.com/zhuyijun/oracle:19c

mkdir -p data
chmod -R a+rwx data

 # ORACLE_CHARACTERSET=AL32UTF8 or ZHS16GBK
docker run -itd --name oracle0 \
-p 1521:1521 -p 5500:5500 \
-e ORACLE_SID=orcl \
-e ORACLE_PDB=pdbtt \
-e ORACLE_PWD=oracle \
-e INIT_SGA_SIZE=512 \
-e INIT_PGA_SIZE=128 \
-e ORACLE_EDITION=enterprise \
-e ORACLE_CHARACTERSET=ZHS16GBK \
-e ENABLE_ARCHIVELOG=true \
-v `pwd`/data:/opt/oracle/oradata \
oracle/database:19.3.0-ee

docker exec -it oracle0 bash
sqlplus / as sysdba;
alter user system identified by 123456;
alter user sys identified by 123456;
alter profile default limit PASSWORD_LIFE_TIME UNLIMITED;
alter pluggable database pdbtt open;
alter session set container=pdbtt;
create user root identified by 123456;
grant connect,session,resource,dba to root;
grant create session to root;
show user;      # 查看当前用户
show pdbs;
sqlplus / as sysdba
conn root/123456@pdbtt;
10.0.0.110:1521/pdbtt

---------------------------------------------------------------------------------------------------------
